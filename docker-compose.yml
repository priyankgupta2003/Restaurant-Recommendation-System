version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend.Dockerfile
    container_name: restaurant-backend
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QDRANT_URL=http://qdrant:6333
    env_file:
      - ./backend/.env
    depends_on:
      - redis
      - qdrant
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped
    networks:
      - restaurant-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.Dockerfile
    container_name: restaurant-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    env_file:
      - ./frontend/.env.local
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - restaurant-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: restaurant-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - restaurant-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: restaurant-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant-data:/qdrant/storage
    restart: unless-stopped
    networks:
      - restaurant-network

volumes:
  redis-data:
  qdrant-data:

networks:
  restaurant-network:
    driver: bridge

